* {
    margin: 0;
    padding: 0;
    font-size: large;
}


:root {
    --tg-theme-bg-color: #FFFFFF;
    --tg-theme-text-color: #000000;
    --tg-theme-hint-color: #999999;
    --tg-theme-link-color: #0088CC;
    --tg-theme-button-color: #0088CC;
    --tg-theme-button-text-color: #FFFFFF;
    --tg-theme-secondary-bg-color: #F5F5F5;
    --tg-theme-header-bg-color: #0088CC;
    --tg-theme-accent-text-color: #FFA500;
    --tg-theme-section-bg-color: #cccccc;
    --tg-theme-section-header-text-color: #000000;
    --tg-theme-subtitle-text-color: #666666;
    --tg-theme-destructive-text-color: rgb(255, 0, 0); 
}


body {
    background: var(--tg-theme-bg-color);
    color: var(--tg-theme-text-color);
    font-family: Arial, sans-serif;
}

svg {
    fill: var(--tg-theme-text-color); 
}


.main-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: start;
    min-height: 100vh;
    gap: 1rem;
}

.container-list {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 1rem;
    gap: 0.4rem;
}

.question-container {
    display: flex;
    flex-direction: column;
    padding: 0.8rem;
    background: var(--tg-theme-secondary-bg-color);
    border-radius: 8px;
    gap: 0.6rem;
    width: 80%;
}

.row {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}

input {
    background-color: transparent;
    border: none;
    border-bottom: 1px solid var(--tg-theme-hint-color);
    outline: none;
    transition: border-color 0.3s ease;
    color: var(--tg-theme-text-color); 
    padding: 0rem 0.3rem;
}

input:focus {
    border-color: var(--tg-theme-button-color);
}

input::placeholder {
    color: var(--tg-theme-hint-color);
    transition: color 0.3s ease;
    padding: 0rem 0.3rem;
}

input:focus::placeholder {
    color: transparent;
}

input:focus {
    cursor: pointer;
    caret-color: var(--tg-theme-button-color);
}

.title {
    font-size: 20px;
}

.checkbox-container {
    display: flex;
    align-items: center;
    /* Выравнивание по центру */
}

.checkbox-text {
    margin-left: 10px;
    width: 100%;
}

button {
    cursor: pointer;
}

/* Стили кнопки */
.custom-button {
    display: inline-block;
    padding: 5px 10px;
    border: none;
    border-radius: 20px;
    background-color: var(--tg-theme-button-color);
    color: var(--tg-theme-text-color);
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    transition: transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94), background-color 0.3s ease;
}

.custom-button:hover {
    transform: scale(1.1);
    background-color: var(--tg-theme-button-color); 
    /* Увеличение размера кнопки при наведении */
}

.custom-button:active {
    transform: scale(1);
    /* Уменьшение размера кнопки при нажатии */
}



.button-plus {
    border-radius: 40px;
    padding: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--tg-theme-text-color);
    background-color: transparent;
    align-self: flex-start;
}


.button-plus-text {
    border-radius: 40px;
    padding: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--tg-theme-text-color);
}

.button-delete {
    border-radius: 50%;
    width: 1.4rem;
    height: 1.4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: transparent;
    border: none;
    padding: 0px;
}

.button-delete:hover {
    background-color: var(--tg-theme-button-color);
}
/*  */
/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 22px;
}

.switch-label {
    font-size: medium;
    width: 100%;
    white-space: nowrap;
}

/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--tg-theme-text-color);
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    width: 16px; /* Уменьшаем ширину в 1.5 раза */
    height: 16px; /* Уменьшаем высоту в 1.5 раза */
    left: 2px; /* Смещаем слайдер влево */
    bottom: 3px;
    background-color: var(--tg-theme-bg-color);
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked+.slider {
    background-color: var(--tg-theme-button-color);
}

input:focus+.slider {
    box-shadow: 0 0 1px var(--tg-theme-button-color);
}

input:checked+.slider:before {
    -webkit-transform: translateX(20px);
    -ms-transform: translateX(20px);
    transform: translateX(20px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}


#popup-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
}

#popup-container {
    background-color: var(--tg-theme-bg-color);
    padding: 20px;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
}

.form-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.6rem;
    justify-content: end;
}

/* Остальные стили оставляем без изменений */
textarea {
    border-radius: 10px; /* Задаем скругленные углы */
    /* border: 1px solid transparent;  */
    transition: border-color 0.3s; /* Плавное изменение цвета границы */
    outline: none; /* Убираем контур фокуса */
    padding: 0.1rem 0.4rem; /* Граница при фокусе */
    background-color: var(--tg-theme-bg-color);
    color: var(--tg-theme-text-color);
    resize: none;
    width: 100%;
}

textarea:focus {
    border-color: var(--tg-theme-button-color); /* Цвет границы при фокусе */
}

textarea::placeholder {
    color: var(--tg-theme-hint-color); /* Задаем цвет placeholder'а */
}

input.error {
   border-bottom: 1px solid var(--tg-theme-destructive-text-color); /* Добавляем стиль границы */
}


textarea.error {
    border: 1px solid var(--tg-theme-destructive-text-color); /* Добавляем стиль границы */
}


.error-text {
    color: var(--tg-theme-destructive-text-color);
}
